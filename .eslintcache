[{"C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\index.js":"1","C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\App.js":"2","C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\scorecard\\Home.js":"3","C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\scorecard\\Loader\\FullPageLoader.js":"4","C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\Graph.js":"5","C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\Tennis.js":"6","C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\redux\\store.js":"7","C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\redux\\teamReducer.js":"8","C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\redux\\actions.js":"9","C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\redux\\chartDataReducer.js":"10","C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\Soccer.js":"11"},{"size":146,"mtime":1612256829716,"results":"12","hashOfConfig":"13"},{"size":1250,"mtime":1613568215330,"results":"14","hashOfConfig":"13"},{"size":1452,"mtime":1613169038265,"results":"15","hashOfConfig":"13"},{"size":603,"mtime":1598104085656,"results":"16","hashOfConfig":"13"},{"size":7855,"mtime":1613603734930,"results":"17","hashOfConfig":"13"},{"size":4716,"mtime":1612881229488,"results":"18","hashOfConfig":"13"},{"size":637,"mtime":1613569068148,"results":"19","hashOfConfig":"13"},{"size":829,"mtime":1612994828472,"results":"20","hashOfConfig":"13"},{"size":777,"mtime":1613081091688,"results":"21","hashOfConfig":"13"},{"size":445,"mtime":1613603950339,"results":"22","hashOfConfig":"13"},{"size":4293,"mtime":1613600180806,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"18kyyi2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\index.js",[],["52","53"],"C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\App.js",[],"C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\scorecard\\Home.js",["54","55"],"import React from \"react\";\r\nimport Graph from \"../Graph\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { activeTeam } from \"../redux/actions\";\r\n\r\nfunction Home(props) {\r\n  const firstTeam = useSelector((state) => state.team.teamOne);\r\n  const secondTeam = useSelector((state) => state.team.teamTwo);\r\n  const activeChart = useSelector((state) => state.team.activeChart);\r\n  let numberOfInnings = useSelector((state) => state.team.numberOfInnings);\r\n  const dispatch = useDispatch();\r\n\r\n  const active = (e, elementNum) => {\r\n    Array.from(e.target.parentElement.children).forEach((element) => {\r\n      element.classList.remove(\"active\");\r\n    });\r\n    e.target.classList.add(\"active\");\r\n    console.log(elementNum);\r\n    dispatch(activeTeam(elementNum));\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"innings\">\r\n        {Array(numberOfInnings)\r\n          .fill(1)\r\n          .map((item, index) => (\r\n            <div\r\n              key={index}\r\n              className={`team ${activeChart == index + 1 ? \"active\" : \"\"}`}\r\n              //ref={`team${index + 1}Ref`}\r\n              onClick={(e) => {\r\n                active(e, index + 1);\r\n              }}\r\n            >\r\n              {index % 2 == 0 ? firstTeam : secondTeam} INNS\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n      <Graph params={props.match.params} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\scorecard\\Loader\\FullPageLoader.js",[],"C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\Graph.js",["56","57","58","59","60","61","62","63"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n//import dateFormat from \"dateformat\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { innings } from \"./redux/actions\";\r\nimport { teamStarts } from \"./redux/actions\";\r\nimport { teamOne } from \"./redux/actions\";\r\nimport { teamTwo } from \"./redux/actions\";\r\nimport { addFirstChartData } from \"./redux/actions\";\r\nimport { addSecondChartData } from \"./redux/actions\";\r\nimport \"./Graph.css\";\r\nimport \"./App.css\";\r\n\r\nfunction Graph({ params }) {\r\n  const [data, setData] = useState([]);\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  const [overs, setOvers] = useState();\r\n  const [runs, setRuns] = useState();\r\n  const [wicket, setWicket] = useState();\r\n  //const [runRate, setRunRate] = useState();\r\n  const dispatch = useDispatch();\r\n  const activeChart = useSelector((state) => state.team.activeChart);\r\n  const startTeam = useSelector((state) => state.team.startTeam);\r\n  const firstTeam = useSelector((state) => state.team.teamOne);\r\n  const secondTeam = useSelector((state) => state.team.teamTwo);\r\n  let chartOne = useSelector((state) => state.chart.chartOne);\r\n  let chartTwo = useSelector((state) => state.chart.chartTwo);\r\n\r\n  useEffect(() => {\r\n    let matchId = params.matchId;\r\n    if (JSON.parse(localStorage.getItem(\"cricketId\")) != matchId) {\r\n      localStorage.removeItem(\"persist:root\");\r\n      localStorage.setItem(\"cricketId\", JSON.stringify(matchId));\r\n    } else {\r\n      localStorage.setItem(\"cricketId\", JSON.stringify(matchId));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      let matchId = params.matchId;\r\n      const response = await fetch(\r\n        `https://cric.dreamcasino.live/sportsdata/?mid=${matchId}`\r\n      );\r\n\r\n      const allData = await response.json();\r\n      const buildData = allData?.result[0]?.data?.match;\r\n\r\n      let noOfInnings;\r\n      buildData?.resultinfo?.innings &&\r\n        Object.keys(buildData?.resultinfo?.innings).map((keyName, index) => {\r\n          noOfInnings = index + 1;\r\n        });\r\n\r\n      dispatch(innings(noOfInnings));\r\n      dispatch(teamStarts(buildData?.resultinfo?.innings[1]?.team)); //home or away\r\n\r\n      if (startTeam == \"home\") {\r\n        dispatch(teamOne(buildData?.teams?.home?.name));\r\n        dispatch(teamTwo(buildData?.teams?.away?.name));\r\n      } else {\r\n        dispatch(teamOne(buildData?.teams?.away?.name));\r\n        dispatch(teamTwo(buildData?.teams?.home?.name));\r\n      }\r\n\r\n      //setTeam(buildData.teams[startTeam].name);\r\n      setOvers(buildData?.resultinfo?.innings[activeChart]?.overs);\r\n      setRuns(buildData?.resultinfo?.innings[activeChart]?.runs);\r\n      //setRunRate(buildData?.current_run_rate);\r\n      setWicket(buildData?.resultinfo?.innings[activeChart]?.wickets);\r\n\r\n      setData(allData?.result);\r\n      setChartData(buildData);\r\n      buildChartData();\r\n    };\r\n    getData();\r\n  }, [chartData]);\r\n\r\n  const addPoint = () => {\r\n    const newPoint = {\r\n      x: chartData?.resultinfo?.innings[activeChart]?.overs\r\n        ? chartData?.resultinfo?.innings[activeChart]?.overs\r\n        : 0,\r\n      y: chartData?.current_run_rate ? chartData?.current_run_rate : 0,\r\n    };\r\n    return newPoint;\r\n  };\r\n\r\n  const buildChartData = () => {\r\n    if (activeChart == 1) {\r\n      let chartData = chartOne;\r\n      let newPoint = addPoint();\r\n      if (\r\n        chartData[chartData.length - 1]?.x !== newPoint.x &&\r\n        newPoint.x != 0\r\n      ) {\r\n        let newChartData = [...chartData, newPoint];\r\n        dispatch(addFirstChartData(newChartData));\r\n      }\r\n    } else {\r\n      let chartData = chartTwo;\r\n      let newPoint = addPoint();\r\n      if (\r\n        chartData[chartData.length - 1]?.x !== newPoint.x &&\r\n        newPoint.x != 0\r\n      ) {\r\n        let newChartData = [...chartData, newPoint];\r\n        dispatch(addSecondChartData(newChartData));\r\n      }\r\n    }\r\n  };\r\n\r\n  const teamCoords = () => {\r\n    return activeChart === 1 ? chartOne : chartTwo;\r\n  };\r\n\r\n  //Chart configuration\r\n  const options = {\r\n    legend: {\r\n      display: true,\r\n      position: \"top\",\r\n      align: \"center\",\r\n      labels: {\r\n        boxWidth: 0,\r\n        fontColor: \"white\",\r\n        fontStyle: \"normal\",\r\n      },\r\n    },\r\n    /* title: {\r\n      display: true,\r\n      text: `${dateFormat(new Date(), \"mmm d\")} ${\r\n        data[0]?.data?.match?._dt?.time\r\n          ? ` | ${data[0]?.data?.match?._dt?.time}`\r\n          : \"\"\r\n      }`,\r\n      fontSize: 14,\r\n      fontColor: \"grey\",\r\n      fontStyle: \"light\",\r\n    }, */\r\n    maintainAspectRatio: true,\r\n    responsive: true,\r\n    elements: {\r\n      point: {\r\n        radius: 1,\r\n        pointStyle: \"rect\",\r\n        hoverRadius: \"7\",\r\n        backgroundColor: \"#572\",\r\n      },\r\n    },\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: true,\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          type: \"linear\",\r\n          ticks: {\r\n            autoSkip: false,\r\n            stepSize: 5,\r\n            suggestedMin: 0,\r\n            suggestedMax: 50,\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            autoSkip: true,\r\n            stepSize: 10,\r\n            max: 10,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"graph\">\r\n      {data?.length > 0 && (\r\n        <div className=\"container\">\r\n          <div className=\"teams\">\r\n            <p>{chartData?.teams?.home?.name}</p>\r\n            <p className=\"status\">{chartData?.status?.name}</p>\r\n            <p>{chartData?.teams?.away?.name}</p>\r\n          </div>\r\n\r\n          {chartData?.resultinfo?.innings && (\r\n            <div className=\"match-info\">\r\n              <p>\r\n                {startTeam === \"home\"\r\n                  ? `${\r\n                      chartData.resultinfo.innings[1]\r\n                        ? chartData.resultinfo.innings[1].runs +\r\n                          \"/\" +\r\n                          chartData.resultinfo.innings[1].wickets\r\n                        : \"Yet to bat\"\r\n                    } : ${\r\n                      chartData.resultinfo.innings[2]\r\n                        ? chartData.resultinfo.innings[2].runs +\r\n                          \"/\" +\r\n                          chartData.resultinfo.innings[2].wickets\r\n                        : \"Yet to bat\"\r\n                    }`\r\n                  : `${\r\n                      chartData.resultinfo.innings[2]\r\n                        ? chartData.resultinfo.innings[2].runs +\r\n                          \"/\" +\r\n                          chartData.resultinfo.innings[2].wickets\r\n                        : \"Yet to bat\"\r\n                    } : ${\r\n                      chartData.resultinfo.innings[1]\r\n                        ? chartData.resultinfo.innings[1].runs +\r\n                          \"/\" +\r\n                          chartData.resultinfo.innings[1].wickets\r\n                        : \"Yet to bat\"\r\n                    }`}\r\n              </p>\r\n\r\n              <p>\r\n                {activeChart === 1 ? firstTeam : secondTeam} are {runs} runs for{\" \"}\r\n                {wicket} wickets after {overs} overs\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          <Line\r\n            data={{\r\n              datasets: [\r\n                {\r\n                  backgroundColor: \"#1A74B510\",\r\n                  borderColor: \"#1A74B5\",\r\n                  borderWidth: 1,\r\n                  pointRadius: 0,\r\n                  data: [...teamCoords()],\r\n                  label: \"RUN RATE\", //name of th axis\r\n                  borderJoinStyle: \"round\",\r\n                },\r\n              ],\r\n            }}\r\n            options={options}\r\n            height={110}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Graph;\r\n","C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\Tennis.js",["64","65","66","67"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Tennis.css\";\r\n\r\nfunction Tennis(props) {\r\n  const [matchData, setMatchData] = useState({});\r\n  const [firstPlayerData, setFirstPlayerData] = useState({});\r\n  const [secondPlayerData, setSecondPlayerData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      let matchId = props.match.params.matchId;\r\n\r\n      const response = await fetch(\r\n        `https://cric.dreamcasino.live/sportsdata/?mid=${matchId}`\r\n      );\r\n      const fetchedData = await response.json();\r\n      console.log(fetchedData);\r\n\r\n      if (fetchedData.result[0].event == \"exception\") {\r\n        setMatchData(false);\r\n        return;\r\n      }\r\n\r\n      let data = fetchedData?.result[0]?.data?.match;\r\n\r\n      let matchResult = {\r\n        gameScore: data.gamescore,\r\n        set: data.status.name,\r\n      };\r\n      let playerOne = players(data, \"home\");\r\n      let playerTwo = players(data, \"away\");\r\n\r\n      setMatchData(matchResult);\r\n      setFirstPlayerData(playerOne);\r\n      setSecondPlayerData(playerTwo);\r\n    };\r\n    getData();\r\n  }, [matchData]);\r\n\r\n  const players = (data, order) => {\r\n    let player = {\r\n      name: data.teams[order].name,\r\n      score: data.result[order],\r\n      periods: data.periods,\r\n      icon: data.teams[order].cc.a2,\r\n    };\r\n    return player;\r\n  };\r\n\r\n  return (\r\n    <div className=\"tennis\">\r\n      {matchData && (\r\n        <section className=\"above-section\">\r\n          <div className=\"player-details\">\r\n            <img\r\n              src={`https://ls.sportradar.com/ls/crest/big/${firstPlayerData?.icon}.png`}\r\n              alt=\"flag\"\r\n            />\r\n            <p className=\"player-name\">{firstPlayerData.name}</p>\r\n          </div>\r\n\r\n          <div>\r\n            <p className=\"set\">\r\n              {matchData.set == \"Not started\" || matchData.set == \"Ended\" ? (\r\n                matchData.set\r\n              ) : (\r\n                <b>Set: {matchData.set}</b>\r\n              )}\r\n            </p>\r\n            <p className=\"goals\">\r\n              {matchData.gameScore?.home\r\n                ? matchData.gameScore.home\r\n                : firstPlayerData.score}{\" \"}\r\n              :{\" \"}\r\n              {matchData.gameScore?.away\r\n                ? matchData.gameScore.away\r\n                : secondPlayerData.score}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"player-details\">\r\n            <img\r\n              src={`https://ls.sportradar.com/ls/crest/big/${secondPlayerData?.icon}.png`}\r\n              alt=\"flag\"\r\n            />\r\n            <p className=\"player-name\">{secondPlayerData.name}</p>\r\n          </div>\r\n        </section>\r\n      )}\r\n\r\n      <section className=\"below-section\">\r\n        <div className=\"table\">\r\n          {firstPlayerData.periods && (\r\n            <ul>\r\n              {Object.keys(firstPlayerData.periods).map((keyName, index) => {\r\n                return <li key={index}>{++index}</li>;\r\n              })}\r\n              <li>T</li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n        <div className=\"results\">\r\n          <div className=\"results-list first\">\r\n            <div className=\"player-details scores\">\r\n              <img\r\n                src={`https://ls.sportradar.com/ls/crest/big/${firstPlayerData?.icon}.png`}\r\n                alt=\"flag\"\r\n              />\r\n              <p className=\"player-name\">{firstPlayerData.name}</p>\r\n            </div>\r\n            {firstPlayerData.periods && (\r\n              <ul>\r\n                {Object.keys(firstPlayerData.periods).map((keyName, index) => {\r\n                  return (\r\n                    <li key={index}>{firstPlayerData.periods[keyName].home}</li>\r\n                  );\r\n                })}\r\n                <li>{firstPlayerData.score}</li>\r\n              </ul>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"results-list second\">\r\n            <div className=\"player-details scores\">\r\n              <img\r\n                src={`https://ls.sportradar.com/ls/crest/big/${secondPlayerData?.icon}.png`}\r\n                alt=\"flag\"\r\n              />\r\n              <p className=\"player-name\">{secondPlayerData.name}</p>\r\n            </div>\r\n            {secondPlayerData.periods && (\r\n              <ul>\r\n                {Object.keys(secondPlayerData.periods).map((keyName, index) => {\r\n                  return (\r\n                    <li key={index}>\r\n                      {secondPlayerData.periods[keyName].away}\r\n                    </li>\r\n                  );\r\n                })}\r\n                <li>{secondPlayerData.score}</li>\r\n              </ul>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tennis;\r\n","C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\redux\\store.js",[],"C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\redux\\teamReducer.js",[],["68","69"],"C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\redux\\actions.js",[],"C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\redux\\chartDataReducer.js",[],"C:\\Users\\WinDows\\Desktop\\Compressed\\scorcard\\src\\Soccer.js",["70","71","72","73","74","75","76","77"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"./Soccer.css\";\r\n\r\nfunction Soccer(props) {\r\n  const [matchData, setMatchData] = useState();\r\n  const [events, setEvents] = useState([]);\r\n  const [coords, setCoords] = useState([]);\r\n  const [time, setTime] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      let matchId = props.match.params.matchId;\r\n      const response = await fetch(\r\n        `https://cric.dreamcasino.live/sportsdata/?mid=${matchId}`\r\n      );\r\n\r\n      const allData = await response.json();\r\n      const data = allData?.result[0]?.data?.match;\r\n      const events = allData?.result[0]?.data?.events;\r\n\r\n      setMatchData(data);\r\n      setEvents(events);\r\n    };\r\n\r\n    getData();\r\n    calcCoords();\r\n  }, [matchData]);\r\n\r\n  //Chart configuration\r\n  const options = {\r\n    legend: {\r\n      display: true,\r\n      position: \"top\",\r\n      align: \"center\",\r\n      labels: {\r\n        boxWidth: 0,\r\n        fontColor: \"white\",\r\n        fontStyle: \"normal\",\r\n      },\r\n    },\r\n    /* title: {\r\n      display: true,\r\n      text: \"title\",\r\n      fontSize: 14,\r\n      fontColor: \"grey\",\r\n      fontStyle: \"light\",\r\n    }, */\r\n    maintainAspectRatio: true,\r\n    elements: {\r\n      point: {\r\n        radius: 1,\r\n        pointStyle: \"rect\",\r\n        hoverRadius: \"7\",\r\n        backgroundColor: \"#572\",\r\n      },\r\n    },\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: true,\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          type: \"linear\",\r\n          ticks: {\r\n            autoSkip: false,\r\n            stepSize: 15,\r\n            suggestedMin: 0,\r\n            max: 90,\r\n            callback: function (value, index) {\r\n              return index == 0 ? \"\" : value;\r\n            },\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: false,\r\n            autoSkip: true,\r\n            stepSize: 200,\r\n            max: 200,\r\n            min: -200,\r\n            callback: function (value) {\r\n              return value == 0 ? value : \"\";\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const calcCoords = () => {\r\n    const coordinates = events.filter((item) => {\r\n      return item.type == \"ballcoordinates\";\r\n    });\r\n\r\n    if (coordinates[0]?.coordinates[0].team == \"home\") {\r\n      addPoint(\"home\", coordinates);\r\n    } else if (coordinates[0]?.coordinates[0].team == \"away\") {\r\n      addPoint(\"away\", coordinates);\r\n    }\r\n  };\r\n  console.log(coords);\r\n\r\n  const addPoint = (team, coordinates) => {\r\n    let xYCoord = coords;\r\n    if (events[0].time > time) {\r\n      xYCoord.push({\r\n        x: events[0].time,\r\n        y:\r\n          team == \"home\"\r\n            ? coordinates[0]?.coordinates[0].Y\r\n            : coordinates[0]?.coordinates[0].Y * -1,\r\n      });\r\n      setCoords(xYCoord);\r\n      setTime(events[0].time);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"soccer\">\r\n      <div className=\"match-data\">\r\n        <p className=\"team-name\">{matchData?.teams.home.name}</p>\r\n        <div className=\"match-stats\">\r\n          <p className=\"status\">\r\n            {matchData?.status.name}\r\n            <span>\r\n              {events[0]?.time != undefined\r\n                ? ` | ${events[0]?.time}' min `\r\n                : \"\"}\r\n            </span>\r\n          </p>\r\n\r\n          {matchData?.result && (\r\n            <p className=\"result\">\r\n              {matchData?.result.home} : {matchData?.result.away}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <p className=\"team-name\">{matchData?.teams.away.name}</p>\r\n      </div>\r\n\r\n      <small>\r\n        <b>{matchData?.teams.home.abbr}</b>\r\n      </small>\r\n      <Line\r\n        data={{\r\n          labels: [0, 15, 30, 45, 60, 75, 90],\r\n          datasets: [\r\n            {\r\n              backgroundColor: \"#1A74B510\",\r\n              borderColor: \"#1A74B5\",\r\n              borderWidth: 1,\r\n              pointRadius: 0,\r\n              data: [...coords],\r\n              borderJoinStyle: \"round\",\r\n              label: \"HT\",\r\n            },\r\n          ],\r\n        }}\r\n        options={options}\r\n        height={80}\r\n      />\r\n      <small>\r\n        <b>{matchData?.teams.away.abbr}</b>\r\n      </small>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Soccer;\r\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":31,"column":46,"nodeType":"84","messageId":"85","endLine":31,"endColumn":48},{"ruleId":"82","severity":1,"message":"83","line":37,"column":26,"nodeType":"84","messageId":"85","endLine":37,"endColumn":28},{"ruleId":"82","severity":1,"message":"86","line":33,"column":55,"nodeType":"84","messageId":"85","endLine":33,"endColumn":57},{"ruleId":"87","severity":1,"message":"88","line":39,"column":6,"nodeType":"89","endLine":39,"endColumn":8,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":53,"column":74,"nodeType":"93","messageId":"94","endLine":53,"endColumn":76},{"ruleId":"82","severity":1,"message":"83","line":60,"column":21,"nodeType":"84","messageId":"85","endLine":60,"endColumn":23},{"ruleId":"87","severity":1,"message":"95","line":79,"column":6,"nodeType":"89","endLine":79,"endColumn":17,"suggestions":"96"},{"ruleId":"82","severity":1,"message":"83","line":92,"column":21,"nodeType":"84","messageId":"85","endLine":92,"endColumn":23},{"ruleId":"82","severity":1,"message":"86","line":97,"column":20,"nodeType":"84","messageId":"85","endLine":97,"endColumn":22},{"ruleId":"82","severity":1,"message":"86","line":107,"column":20,"nodeType":"84","messageId":"85","endLine":107,"endColumn":22},{"ruleId":"82","severity":1,"message":"83","line":19,"column":39,"nodeType":"84","messageId":"85","endLine":19,"endColumn":41},{"ruleId":"87","severity":1,"message":"97","line":38,"column":6,"nodeType":"89","endLine":38,"endColumn":17,"suggestions":"98"},{"ruleId":"82","severity":1,"message":"83","line":64,"column":30,"nodeType":"84","messageId":"85","endLine":64,"endColumn":32},{"ruleId":"82","severity":1,"message":"83","line":64,"column":64,"nodeType":"84","messageId":"85","endLine":64,"endColumn":66},{"ruleId":"78","replacedBy":"99"},{"ruleId":"80","replacedBy":"100"},{"ruleId":"87","severity":1,"message":"101","line":28,"column":6,"nodeType":"89","endLine":28,"endColumn":17,"suggestions":"102"},{"ruleId":"82","severity":1,"message":"83","line":72,"column":28,"nodeType":"84","messageId":"85","endLine":72,"endColumn":30},{"ruleId":"82","severity":1,"message":"83","line":86,"column":28,"nodeType":"84","messageId":"85","endLine":86,"endColumn":30},{"ruleId":"82","severity":1,"message":"83","line":96,"column":24,"nodeType":"84","messageId":"85","endLine":96,"endColumn":26},{"ruleId":"82","severity":1,"message":"83","line":99,"column":45,"nodeType":"84","messageId":"85","endLine":99,"endColumn":47},{"ruleId":"82","severity":1,"message":"83","line":101,"column":52,"nodeType":"84","messageId":"85","endLine":101,"endColumn":54},{"ruleId":"82","severity":1,"message":"83","line":113,"column":16,"nodeType":"84","messageId":"85","endLine":113,"endColumn":18},{"ruleId":"82","severity":1,"message":"86","line":130,"column":32,"nodeType":"84","messageId":"85","endLine":130,"endColumn":34},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.matchId'. Either include it or remove the dependency array.","ArrayExpression",["105"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'activeChart', 'buildChartData', 'dispatch', 'params.matchId', and 'startTeam'. Either include them or remove the dependency array.",["106"],"React Hook useEffect has a missing dependency: 'props.match.params.matchId'. Either include it or remove the dependency array.",["107"],["103"],["104"],"React Hook useEffect has missing dependencies: 'calcCoords' and 'props.match.params.matchId'. Either include them or remove the dependency array.",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [params.matchId]",{"range":"117","text":"118"},"Update the dependencies array to be: [activeChart, buildChartData, chartData, dispatch, params.matchId, startTeam]",{"range":"119","text":"120"},"Update the dependencies array to be: [matchData, props.match.params.matchId]",{"range":"121","text":"122"},"Update the dependencies array to be: [calcCoords, matchData, props.match.params.matchId]",{"range":"123","text":"124"},[1617,1619],"[params.matchId]",[2985,2996],"[activeChart, buildChartData, chartData, dispatch, params.matchId, startTeam]",[1104,1115],"[matchData, props.match.params.matchId]",[810,821],"[calcCoords, matchData, props.match.params.matchId]"]